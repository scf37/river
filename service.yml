---
name: "backuper"                    # Application name
description: File backup service.
help: |
  This service loads *.yml files from /data/conf and periodically backs up data to remote location.
  *.yml file format:
    name - backup name, used to construct remote folder name
    local.dirs[] - list of directories to backup. It is up to user to mount them inside container beforehand
    local.exclude[] - files and patterns to exclude from backup
    local.include_only[] - exclude all files except defined here
    remote - added as prefix to remote path, so full path is backup_remote / remote / name / IP / DATE / <files>
    keep_incremental_backup_count - integer, maximum number of incremental backups within full backup
    keep_full_backup_count - integer, maximum number of full backups to keep
    backup_rate - "<n>d", "<n>h", "<n>m" - days, hours or minutes between backups

  Backuper automatically catches up on config changes and resillent to failures.

  Restoration:
  call restore.py INSIDE configured container. There is own help but to summarize:
   - backup archives contain ABSOLUTE file paths so restoration by default places filies with the same pathnames
   - typical invocation: restore.py --url <url>

  Initiating backups from outside:
  Put text file containing single line with backup name to execute to /data/tasks. When backup completes,
  original file will be deleted and response file will be created with "-ok" or "-error" suffixes. "-ok" file
  will contain single line with backup url, "-error" file - error description

config:
 -
   param: "backup_protocol"
   description: "backup protocol to use, local, s3 or mailru"
   default: "local"
 -
   param: "backup_remote"
   description: "Base remote path to use, protocol-specific. for local it is absolute path, for s3 it is bucket name"
   default: "/data/remote"
 -
   param: "backup_use_ip_in_path"
   description: "If true, add local IP to remote backup path. Useful when backing up servers with static IPs"
   default: "true"
 -
   param: "AWS_ACCESS_KEY_ID"
   description: "AWS access key, required for S3"
   default: ""
   secret: true
 -
   param: "AWS_SECRET_ACCESS_KEY"
   description: "AWS secret key, required for S3"
   default: ""
   secret: true
 -
   param: "AWS_DEFAULT_REGION"
   description: "AWS secret key"
   default: "us-west-2"
 -
   param: "email"
   description: "mail.ru login"
   default: ""
 -
   param: "password"
   description: "mail.ru password"
   default: ""
   secret: true
 -
   param: "encryption_key"
   description: "password used to encrypt backups"
   default: ""
   secret: true

provides: []

consumes: []
